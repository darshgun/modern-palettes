@import "../tokens/typography.map";

$font-size-data: (
  heading: (
    base: rem(17px),
  ),
  subheading: (
    base: rem(13px),
  ),
  control: (
    base: rem(14px),
    large-screen: rem(14px),
  ),
  body: (
    base: rem(14px),
    large-screen: rem(14px),
  ),
  default: (
    base: rem(16px),
    large-screen: rem(16px),
  ),
);

$line-height-data: (
  heading: (
    base: rem(24px),
  ),
  subheading: (
    base: rem(16px),
  ),
  control: (
    base: rem(18px),
    large-screen: rem(20px),
  ),
  body: (
    base: rem(18px),
    large-screen: rem(20px),
  ),
);

/// Returns the font stack for a given family.
///
/// @param {String} $family - The key for the given family.
/// @return {Number} The font stack for the family.
@function font-family($family: base) {
  $fetched-value: map-get($font-family-data, $family);

  @if $fetched-value != null {
    @return $fetched-value;
  } @else {
    @error 'Font family `#{$family}` not found. Available font families: #{available-names($font-family-data)}';
  }
}

/// Returns the line height for a given text style and variant.
///
/// @param {String} $style - The font style.
/// @param {String} $variant [base] - The variant on the font-size.
/// @return {Number} The line-height for the text-style.
@function line-height($style, $variant: base) {
  $fetched-line-height: map-get(map-get($line-height-data, $style), $variant);

  @if type-of($fetched-line-height) != null {
    @return $fetched-line-height;
  } @else {
    @error 'Line height `#{$style} - #{$variant}` not found. Available line heights: #{available-names($line-height-data)}';
  }
}

/// Returns the font size for a given text style and variant.
///
/// @param {String} $style - The font style.
/// @param {String} $variant [base] - The variant on the font-size.
/// @return {Number} The font-size for the text-style.
@function font-size($style, $variant: base) {
  $fetched-font-size: map-get(map-get($font-size-data, $style), $variant);

  @if type-of($fetched-font-size) != null {
    @return $fetched-font-size;
  } @else {
    @error 'Font size `#{$style} - #{$variant}` not found. Available font sizes: #{available-names($font-size-data)}';
  }
}

/// Returns the font size for a given text style and variant.
///
/// @param {String} $style - The font weight.
/// @param {String} $weight [base] - The variant on the font-size.
/// @return {Number} The font-size for the text-style.
@function font-weight($weight: base, $style: base) {
  $fetched-font-weight: map-get(map-get($font-weight-data, $style), $weight);

  @if type-of($fetched-font-weight) != null {
    @return $fetched-font-weight;
  } @else {
    @error 'Font weight `#{$style} - #{$weight}` not found. Available font weights: #{available-names($font-weight-data)}';
  }
}

// Typography presets
@mixin text-style-input {
  font-size: font-size(input);
  font-weight: 400;
  line-height: line-height(input);

  text-transform: initial;
  letter-spacing: initial;
}
